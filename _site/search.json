[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thomas Reinke",
    "section": "",
    "text": "Thomas Reinke is a PhD student studying statistics at Baylor University."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Thomas Reinke",
    "section": "Education",
    "text": "Education\nSamford University | Birmingham, AL BS in Mathematics | Aug 2019 - May 2023"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Thomas Reinke",
    "section": "Experience",
    "text": "Experience\nBlue Cross and Blue Shield of Alabama | Healthcare Analytics Intern | June 2022 - Aug 2022\nAutoTec | Data Analyst Intern | Feb 2022 - Apr 2022"
  },
  {
    "objectID": "index.html#languages-software",
    "href": "index.html#languages-software",
    "title": "Thomas Reinke",
    "section": "Languages & Software",
    "text": "Languages & Software\nR/Rstudio, Git/Github, Docker, SQL, Python, Java, AWS, Tableau, Toad"
  },
  {
    "objectID": "art.html",
    "href": "art.html",
    "title": "Art",
    "section": "",
    "text": "Code\nmake_df &lt;- \\(n = 6) {\n  expand.grid(x = seq(0, 1, length.out = n),\n         y = seq(0, 1, length.out = n)) |&gt;\n    tibble(\n      color = sample(1:6, n^2, replace = TRUE),\n      stroke = sample(5:9, n^2, replace = TRUE),\n      shape = sample(c(7:10, 12:13), n^2, replace = TRUE)\n    )\n}\n\ndraw &lt;- \\(seed = 1) {\n  set.seed(seed)\n  make_df() |&gt;\n    ggplot(aes(\n      x = x,\n      y = y,\n      color = factor(color)\n    )) +\n    geom_point(aes(\n      size = 1,\n      stroke = stroke,\n      shape = factor(shape)\n    ), show.legend = F) +\n    coord_cartesian(xlim = c(-.25, 1.25), ylim = c(-.25, 1.25)) +\n    scale_color_brewer(palette = \"Set1\")\n}\n\n#map(1:5, draw)\ndraw(5)\n\n\n\n\n\n\n\n\n\n\n\n\nDelaunay Triangulation\n\n\nCode\ndel_df &lt;- \\(n = 10){\n  expand.grid(x = seq(0, 1, length.out = n),\n              y = seq(0, 1, length.out = n)) |&gt;\n    tibble( \n      fill = sample(letters[1:3], n^2, replace = TRUE)\n    )\n}\n\ndel_df() |&gt;\n  ggplot(aes(x, y)) +\n  ggforce::geom_delaunay_segment2(\n    aes(color = fill, group = -1),\n    size = 2,\n    lineend = \"round\",\n    show.legend = FALSE\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\ndel_df2 &lt;- \\(n = 50, groups = 3, prob = NULL){\n  tibble(\n  x = sample(1:n, size = n %/% 2, prob = prob),\n  y = sample(1:n, size = n %/% 2, prob = prob),\n  fill = sample(letters[1:groups], size = n %/% 2, replace = TRUE)\n  )\n}\n\nmake_del2 &lt;- \\(seed = 1) {\n  set.seed(seed)\n  del_df2() |&gt;\n    ggplot(aes(x, y)) +\n    ggforce::geom_delaunay_segment2(\n      aes(color = fill, group = -1),\n      size = 2,\n      lineend = \"round\",\n      show.legend = FALSE\n    )\n}\n\nmake_del2(2)\n\n\n\n\n\n\n\n\n\n\n\n\nVoronoi Diagram\n\n\nCode\nvor_df &lt;- \\(n = 50, groups = 3, prob = NULL) {\n  tibble(\n    x = sample(1:n, size = n %/% 2, prob = prob),\n    y = sample(1:n, size = n %/% 2, prob = prob),\n    fill = sample(letters[1:groups], size = n %/% 2, replace = TRUE)\n  )\n}\n\nmake_vor &lt;- \\(seed = 1) {\n  set.seed(seed)\n  vor_df() |&gt;\n    ggplot(aes(x, y, group = -1L)) +\n    ggforce::geom_voronoi_tile(aes(fill = fill), show.legend = FALSE) +\n    ggforce::geom_voronoi_segment(color = background)\n}\n\nmake_vor(1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nr_df &lt;- \\(n = 501){\n  expand.grid(x = seq(0, 1, length.out = n),\n              y = seq(0, 1, length.out = n)) |&gt;\n    tibble( \n      fill1 = 1:n^2,\n      fill2 = func(c(1:n^2))\n    )\n}\n\nr_df() |&gt;\n  ggplot(aes(x, y)) +\n  geom_raster(aes(fill = factor(fill1)),\n              interpolate = TRUE,\n              show.legend = FALSE) + \n  scale_fill_viridis_d(option = \"turbo\") + \n  coord_equal()\n\n\n\n\n\n\n\n\n\nCode\nr_df() |&gt;\n  ggplot(aes(x, y)) +\n  geom_raster(aes(fill = factor(fill2)),\n              interpolate = TRUE,\n              show.legend = FALSE) + \n  scale_fill_viridis_d(option = \"turbo\") + \n  coord_equal()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\np_df &lt;- \\(n = 25, groups = 5, prob = NULL) {\n  tibble(\n    x = sample(1:(n * 2), size = n, prob = prob),\n    y = sample(1:(n * 2), size = n, prob = prob),\n    fill = sample(letters[1:groups], size = n, replace = TRUE),\n    size = sample(30:50, size = n, replace = TRUE)\n  )\n}\n\nbubbles &lt;- \\(seed = 1, number_of_bubbles = 25) {\n  set.seed(seed)\n  p_df(number_of_bubbles) |&gt;\n    ggplot(aes(x, y)) +\n    geom_point(\n      aes(\n        fill = fill,\n        color = fill,\n        size = size\n      ),\n      stroke = .1,\n      shape = 21,\n      alpha = .35,\n      show.legend = FALSE\n    ) +\n    scale_size_identity()\n}\n\nbubbles(seed = 5)"
  },
  {
    "objectID": "art.html#grid-of-shapes",
    "href": "art.html#grid-of-shapes",
    "title": "Art",
    "section": "",
    "text": "Code\nmake_df &lt;- \\(n = 6) {\n  expand.grid(x = seq(0, 1, length.out = n),\n         y = seq(0, 1, length.out = n)) |&gt;\n    tibble(\n      color = sample(1:6, n^2, replace = TRUE),\n      stroke = sample(5:9, n^2, replace = TRUE),\n      shape = sample(c(7:10, 12:13), n^2, replace = TRUE)\n    )\n}\n\ndraw &lt;- \\(seed = 1) {\n  set.seed(seed)\n  make_df() |&gt;\n    ggplot(aes(\n      x = x,\n      y = y,\n      color = factor(color)\n    )) +\n    geom_point(aes(\n      size = 1,\n      stroke = stroke,\n      shape = factor(shape)\n    ), show.legend = F) +\n    coord_cartesian(xlim = c(-.25, 1.25), ylim = c(-.25, 1.25)) +\n    scale_color_brewer(palette = \"Set1\")\n}\n\n#map(1:5, draw)\ndraw(5)"
  },
  {
    "objectID": "art.html#geom_delaunay",
    "href": "art.html#geom_delaunay",
    "title": "Art",
    "section": "",
    "text": "Delaunay Triangulation\n\n\nCode\ndel_df &lt;- \\(n = 10){\n  expand.grid(x = seq(0, 1, length.out = n),\n              y = seq(0, 1, length.out = n)) |&gt;\n    tibble( \n      fill = sample(letters[1:3], n^2, replace = TRUE)\n    )\n}\n\ndel_df() |&gt;\n  ggplot(aes(x, y)) +\n  ggforce::geom_delaunay_segment2(\n    aes(color = fill, group = -1),\n    size = 2,\n    lineend = \"round\",\n    show.legend = FALSE\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\ndel_df2 &lt;- \\(n = 50, groups = 3, prob = NULL){\n  tibble(\n  x = sample(1:n, size = n %/% 2, prob = prob),\n  y = sample(1:n, size = n %/% 2, prob = prob),\n  fill = sample(letters[1:groups], size = n %/% 2, replace = TRUE)\n  )\n}\n\nmake_del2 &lt;- \\(seed = 1) {\n  set.seed(seed)\n  del_df2() |&gt;\n    ggplot(aes(x, y)) +\n    ggforce::geom_delaunay_segment2(\n      aes(color = fill, group = -1),\n      size = 2,\n      lineend = \"round\",\n      show.legend = FALSE\n    )\n}\n\nmake_del2(2)"
  },
  {
    "objectID": "art.html#geom_voronoi",
    "href": "art.html#geom_voronoi",
    "title": "Art",
    "section": "",
    "text": "Voronoi Diagram\n\n\nCode\nvor_df &lt;- \\(n = 50, groups = 3, prob = NULL) {\n  tibble(\n    x = sample(1:n, size = n %/% 2, prob = prob),\n    y = sample(1:n, size = n %/% 2, prob = prob),\n    fill = sample(letters[1:groups], size = n %/% 2, replace = TRUE)\n  )\n}\n\nmake_vor &lt;- \\(seed = 1) {\n  set.seed(seed)\n  vor_df() |&gt;\n    ggplot(aes(x, y, group = -1L)) +\n    ggforce::geom_voronoi_tile(aes(fill = fill), show.legend = FALSE) +\n    ggforce::geom_voronoi_segment(color = background)\n}\n\nmake_vor(1)"
  },
  {
    "objectID": "art.html#geom_raster",
    "href": "art.html#geom_raster",
    "title": "Art",
    "section": "",
    "text": "Code\nr_df &lt;- \\(n = 501){\n  expand.grid(x = seq(0, 1, length.out = n),\n              y = seq(0, 1, length.out = n)) |&gt;\n    tibble( \n      fill1 = 1:n^2,\n      fill2 = func(c(1:n^2))\n    )\n}\n\nr_df() |&gt;\n  ggplot(aes(x, y)) +\n  geom_raster(aes(fill = factor(fill1)),\n              interpolate = TRUE,\n              show.legend = FALSE) + \n  scale_fill_viridis_d(option = \"turbo\") + \n  coord_equal()\n\n\n\n\n\n\n\n\n\nCode\nr_df() |&gt;\n  ggplot(aes(x, y)) +\n  geom_raster(aes(fill = factor(fill2)),\n              interpolate = TRUE,\n              show.legend = FALSE) + \n  scale_fill_viridis_d(option = \"turbo\") + \n  coord_equal()"
  },
  {
    "objectID": "art.html#bubbles",
    "href": "art.html#bubbles",
    "title": "Art",
    "section": "",
    "text": "Code\np_df &lt;- \\(n = 25, groups = 5, prob = NULL) {\n  tibble(\n    x = sample(1:(n * 2), size = n, prob = prob),\n    y = sample(1:(n * 2), size = n, prob = prob),\n    fill = sample(letters[1:groups], size = n, replace = TRUE),\n    size = sample(30:50, size = n, replace = TRUE)\n  )\n}\n\nbubbles &lt;- \\(seed = 1, number_of_bubbles = 25) {\n  set.seed(seed)\n  p_df(number_of_bubbles) |&gt;\n    ggplot(aes(x, y)) +\n    geom_point(\n      aes(\n        fill = fill,\n        color = fill,\n        size = size\n      ),\n      stroke = .1,\n      shape = 21,\n      alpha = .35,\n      show.legend = FALSE\n    ) +\n    scale_size_identity()\n}\n\nbubbles(seed = 5)"
  }
]